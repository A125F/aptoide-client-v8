/*
 * Copyright (c) 2016.
 * Modified by SithEngineer on 29/06/2016.
 */

apply plugin: 'com.android.library'
apply plugin: 'io.fabric'
apply plugin: 'me.tatarka.retrolambda'

retrolambda {
    jvmArgs '-noverify'
}

crashlytics {
    enableNdk true
    androidNdkOut 'src/main/obj'
    androidNdkLibsOut 'src/main/libs'
}

// Should be moved to application module when possible
Properties localProperties = new Properties()
localProperties.load(new FileInputStream("local.properties"))

def fabricApiKey = localProperties.FABRIC_API_KEY

android {
    def BOOLEAN = "boolean"
    def FABRIC_CONFIGURED = "FABRIC_CONFIGURED"

    // Websockets
    useLibrary 'org.apache.http.legacy'

    compileSdkVersion COMPILE_SDK_VERSION
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion 15

        buildConfigField BOOLEAN, FABRIC_CONFIGURED, (fabricApiKey != null).toString()
        consumerProguardFiles "proguard-rules.txt"

        // http://tools.android.com/tech-docs/jackandjill
        jackOptions {
            enabled false
        }
    }

    lintOptions {
        abortOnError false
    }

    publishNonDefault true

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources true
        }
        debug {
            minifyEnabled false
            shrinkResources false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            res.srcDirs = ['src/main/res', 'src/main/res/deprecated']
        }
    }
}

dependencies {

    //
    // inter-projects dependencies
    //

    debugCompile project(path: ':database', configuration: 'debug')
    releaseCompile project(path: ':database', configuration: 'release')

    debugCompile project(path: ':dataprovider', configuration: 'debug')
    releaseCompile project(path: ':dataprovider', configuration: 'release')

    debugCompile project(path: ':utils', configuration: 'debug')
    releaseCompile project(path: ':utils', configuration: 'release')

    debugCompile project(path: ':aptoide_accountmanager', configuration: 'debug')
    releaseCompile project(path: ':aptoide_accountmanager', configuration: 'release')

    debugCompile project(path: ':imageloader', configuration: 'debug')
    releaseCompile project(path: ':imageloader', configuration: 'release')

    debugCompile project(path: ':downloadmanager', configuration: 'debug')
    releaseCompile project(path: ':downloadmanager', configuration: 'release')

    //
    // custom libs in folders
    //

    compile fileTree(dir: 'libs', include: ['*.jar'])

    //
    // from remote repos
    //

    testCompile "junit:junit:${JUNIT_VERSION}"
    testCompile "org.robolectric:robolectric:${ROBOELECTRIC_VERSION}"

    //noinspection GradleDependency
    compile "com.android.support:support-v4:${SUPPORT_LIB_VERSION}"
    //noinspection GradleDependency
    compile "com.android.support:appcompat-v7:${SUPPORT_LIB_VERSION}"
    //noinspection GradleDependency
    compile "com.android.support:preference-v7:${SUPPORT_LIB_VERSION}"
    //noinspection GradleDependency
    compile "com.android.support:recyclerview-v7:${SUPPORT_LIB_VERSION}"
    //noinspection GradleDependency
    compile "com.android.support:palette-v7:${SUPPORT_LIB_VERSION}"
    //noinspection GradleDependency
    compile "com.android.support:design:${SUPPORT_LIB_VERSION}"
    //compile "com.android.support:percent:${SUPPORT_LIB_VERSION}"

    provided "org.projectlombok:lombok:${LOMBOK_VERSION}"

    compile "com.jpardogo.materialtabstrip:library:${MATERIAL_TAB_STRIP_VERSION}"

    compile "com.trello:rxlifecycle:${TRELLO_RX_LIFECYCLE_VERSION}"
    // If you want pre-written Activities and Fragments you can subclass as providers
    compile "com.trello:rxlifecycle-components:${TRELLO_RX_LIFECYCLE_VERSION}"

    //    Apagar
    compile "com.jakewharton.rxbinding:rxbinding:${JW_RX_BINDING_VERSION}"
    compile "com.jakewharton.rxbinding:rxbinding-design:${JW_RX_BINDING_VERSION}"
    compile "com.jakewharton.rxbinding:rxbinding-support-v4:${JW_RX_BINDING_VERSION}"
    compile "com.jakewharton.rxbinding:rxbinding-appcompat-v7:${JW_RX_BINDING_VERSION}"
    compile "com.jakewharton.rxbinding:rxbinding-recyclerview-v7:${JW_RX_BINDING_VERSION}"

    // for leak detection
    debugCompile "com.squareup.leakcanary:leakcanary-android:${LEAK_CANARY_VERSION}"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${LEAK_CANARY_VERSION}"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:${LEAK_CANARY_VERSION}"

    // Crashlytics Kit
    compile('com.crashlytics.sdk.android:crashlytics:2.5.7@aar') {
        transitive = true
    }
    /*
    // NDK Kit
    compile('com.crashlytics.sdk.android:crashlytics-ndk:1.1.2@aar') {
        transitive = true
    }
    */

    debugCompile "com.facebook.stetho:stetho:${STETHO_VERSION}"
    debugCompile "com.facebook.stetho:stetho-js-rhino:${STETHO_VERSION}"
}
