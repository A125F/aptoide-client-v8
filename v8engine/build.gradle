/*
 * Copyright (c) 2016.
 * Modified by Neurophobic Animal on 28/06/2016.
 */

apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'io.fabric'

retrolambda {
    jvmArgs '-noverify'
}

crashlytics {
    enableNdk true
    androidNdkOut 'src/main/obj'
    androidNdkLibsOut 'src/main/libs'
}

// Should be moved to application module when possible
Properties localProperties = new Properties()
localProperties.load(new FileInputStream("local.properties"))

def fabricApiKey = localProperties.FABRIC_API_KEY

android {
    def BOOLEAN = "boolean"
    def FABRIC_CONFIGURED = "FABRIC_CONFIGURED"

    // Websockets
    useLibrary 'org.apache.http.legacy'

    compileSdkVersion 23
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion 15

        buildConfigField BOOLEAN, FABRIC_CONFIGURED, (fabricApiKey != null).toString()
    }

    publishNonDefault true

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            res.srcDirs = ['src/main/res', 'src/main/res/deprecated']
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:support-v4:${SUPPORT_LIB_VERSION}"
    compile "com.android.support:appcompat-v7:${SUPPORT_LIB_VERSION}"
    compile "com.android.support:preference-v7:${SUPPORT_LIB_VERSION}"
    compile "com.android.support:recyclerview-v7:${SUPPORT_LIB_VERSION}"
    compile "com.android.support:palette-v7:${SUPPORT_LIB_VERSION}"
    compile "com.android.support:design:${SUPPORT_LIB_VERSION}"
    //compile "com.android.support:percent:${SUPPORT_LIB_VERSION}"

    provided "org.projectlombok:lombok:${LOMBOK_VERSION}"

    compile 'com.jpardogo.materialtabstrip:library:1.1.0'

    compile 'com.trello:rxlifecycle:0.6.1'
    // If you want pre-written Activities and Fragments you can subclass as providers
    compile 'com.trello:rxlifecycle-components:0.6.1'

    //    Apagar
    compile "com.jakewharton.rxbinding:rxbinding:${RX_BINDING_VERSION}"
    compile "com.jakewharton.rxbinding:rxbinding-design:${RX_BINDING_VERSION}"
    compile "com.jakewharton.rxbinding:rxbinding-support-v4:${RX_BINDING_VERSION}"
    compile "com.jakewharton.rxbinding:rxbinding-appcompat-v7:${RX_BINDING_VERSION}"
    compile "com.jakewharton.rxbinding:rxbinding-recyclerview-v7:${RX_BINDING_VERSION}"

    // for unit tests
    testCompile 'junit:junit:4.12'
    testCompile 'org.robolectric:robolectric:3.0'

    // for leak detection
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    // Crashlytics Kit
    compile('com.crashlytics.sdk.android:crashlytics:2.5.7@aar') {
        transitive = true
    }
    /*
    // NDK Kit
    compile('com.crashlytics.sdk.android:crashlytics-ndk:1.1.2@aar') {
        transitive = true
    }
    */

    // Internal dependencies

    debugCompile project(path: ':database', configuration: 'debug')
    releaseCompile project(path: ':database', configuration: 'release')

    debugCompile project(path: ':dataprovider', configuration: 'debug')
    releaseCompile project(path: ':dataprovider', configuration: 'release')

    debugCompile project(path: ':utils', configuration: 'debug')
    releaseCompile project(path: ':utils', configuration: 'release')

    debugCompile project(path: ':aptoide_accountmanager', configuration: 'debug')
    releaseCompile project(path: ':aptoide_accountmanager', configuration: 'release')

    debugCompile project(path: ':imageloader', configuration: 'debug')
    releaseCompile project(path: ':imageloader', configuration: 'release')

    debugCompile project(path: ':downloadmanager', configuration: 'debug')
    releaseCompile project(path: ':downloadmanager', configuration: 'release')
}
