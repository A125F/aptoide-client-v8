apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'

retrolambda {
  jvmArgs '-noverify'
  //defaultMethods true
}

android {
  compileSdkVersion COMPILE_SDK_VERSION
  buildToolsVersion BUILD_TOOLS_VERSION

  defaultConfig {
    minSdkVersion 9

    configureFabric delegate, project.FABRIC_API_KEY
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  publishNonDefault true

  buildTypes {
    debug {
      minifyEnabled false
      shrinkResources false
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

void configureFabric(androidDelegate, key) {
  androidDelegate.buildConfigField("boolean", "FABRIC_CONFIGURED", (key != null).toString())
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
  testCompile 'junit:junit:4.12'

  debugCompile project(path: ':utils', configuration: 'debug')
  releaseCompile project(path: ':utils', configuration: 'release')

  provided "org.projectlombok:lombok:${LOMBOK_VERSION}"
  compile("com.crashlytics.sdk.android:crashlytics:${CRASHLYTICS_VERSION}@aar") {
    transitive = true;
  }
}
